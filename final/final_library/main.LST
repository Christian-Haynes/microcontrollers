C51 COMPILER V7.05   MAIN                                                                  12/01/2012 00:33:56 PAGE 1   


C51 COMPILER V7.05, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\SiLabs\MCU\IDEfiles\C51\BIN\C51.exe main.c DB OE BR

stmt level    source

   1          #include <c8051f120.h>           // Get SFR declarations
   2          #include "types.h"
   3          #include "spi.h"
   4          #include "lcd.h"
   5          #include "sd.h"
   6          #include "dac.h"
   7          #include "readdir.h"
   8          #include "wav.h"
   9          
  10          //#pragma code                        // Include ASM in .LST file
  11          void kbinit ( void );
  12          uint8_t kbcheck ( void );
  13          void dacinit ( void );
  14          
  15          extern uint8_t  xdata numSongs;      // Number of songs found
  16          extern uint32_t xdata songSector[32];// Starting sector of each file.
  17          
  18          int main(void){
  19   1          wav_header header;
  20   1          wav_header* header_ptr = &header;
  21   1          int current_sector = songSector[0];
  22   1          int i, ping, pong;
  23   1          uint32_t bytestoplay, bytesread;
  24   1          uint8_t xdata buffer[2][512];
  25   1      
  26   1          //init procedures
  27   1          SFRPAGE = 0x0F;
  28   1          WDTCN = 0xDE;                   // Disable watchdog timer
  29   1          WDTCN = 0xAD;
  30   1          OSCICN = 0xC2;
  31   1          XBR2 |= 0x40;                   // Enable crossbar and weak pull-up
  32   1          EA = 1;                         // Enable all interrupts
  33   1          spi_set_divisor(0);
  34   1          spiinit();
  35   1          lcdinit();
  36   1          kbinit();
  37   1          dacinit();
  38   1          dac2init();
  39   1          dacrate(11025);
  40   1          dacstereo(0);                   // Set number of channels to mono
  41   1      
  42   1          while(1){
  43   2              while(!spicardpresent()){   // Wait until card is detected
  44   3                  lcdpos(0,0);
  45   3                  lcdwrite("Insert microSD");
  46   3                  lcdpos(1,0);
  47   3                  lcdwrite("card...");
  48   3              };
  49   2              if(!microSDinit()){         // If initialization fails, print error.
  50   3                  lcdclear();
  51   3                  lcdpos(0,0);
  52   3                  lcdwrite("ERROR: microSD");
  53   3                  lcdpos(1,0);
  54   3                  lcdwrite("failure.");
  55   3              } else {
C51 COMPILER V7.05   MAIN                                                                  12/01/2012 00:33:56 PAGE 2   

  56   3                  spi_set_divisor(1);     // Set to max speed after initialisation
  57   3                  readdir();              // Fill in numSongs and songSector[32]
  58   3      
  59   3                  while(spicardpresent()){
  60   4                      PCON |= 1;          // Power management setting
  61   4                      for(i=0; i<numSongs; i++){
  62   5                          current_sector = songSector[i];
  63   5                          microSDread(current_sector, (uint8_t *) &header);
  64   5                          switch(ntohs(header.numChannels)){
  65   6                              case 2:
  66   6                                  dacstereo(1); // Stereo
  67   6                              case 1:
  68   6                              default:
  69   6                                  dacstereo(0); // Mono
  70   6                          }
  71   5                          dacrate(ntohl(header.sampleRate));
  72   5                          bytestoplay = ntohl(header.subchunk2Size);
  73   5                          lcdclear();
  74   5                          lcdpos(0,0);
  75   5                          lcdwrite((uint8_t *) i); lcdwrite(":");
  76   5                          lcdwrite(header.artist);
  77   5                          lcdpos(1,0);
  78   5                          lcdwrite(header.title);
  79   5                          if(!dacbusy()){
  80   6                              dacplay(404, (uint8_t xdata *)(header_ptr + 108));
  81   6                              //RIFF header + artist&title strings out of 512 B block
  82   6                          }
  83   5                          bytesread = 404;
  84   5                          bytestoplay -= 404;
  85   5                          ping = 0;
  86   5                          microSDread(current_sector + bytesread, buffer[ping]);
  87   5                          // Well, we stop playing when bytestoplay = 0. If not, read
  88   5                          while(bytestoplay > 0){
  89   6                              pong = ping;
  90   6                              ping = 1-pong;  // To keep ahead of the DAC
  91   6                              if(!dacbusy()){
  92   7                                  if(bytestoplay >= 512){
  93   8                                      dacplay(512, buffer[pong]);
  94   8                                      bytestoplay -= 512;
  95   8                                      bytesread += 512;
  96   8                                  }else{
  97   8                                      dacplay(bytestoplay, buffer[pong]);
  98   8                                      bytestoplay = 0; // Done playing song.
  99   8                                  }
 100   7                                  microSDread(current_sector + bytesread, buffer[ping]);
 101   7                                  switch(kbcheck()){
 102   8                                      case '+':
 103   8                                      case '=':
 104   8                                          dacvolume(1);
 105   8                                          break;
 106   8                                      case '-':
 107   8                                      case '_':
 108   8                                          dacvolume(0);
 109   8                                          break;
 110   8                                      case '>':
 111   8                                      case '.':
 112   8                                          dacbalance(0);
 113   8                                          break;
 114   8                                      case '<':
 115   8                                      case ',':
 116   8                                          dacbalance(1);
 117   8                                          break;
C51 COMPILER V7.05   MAIN                                                                  12/01/2012 00:33:56 PAGE 3   

 118   8                                      case 'n':
 119   8                                      case 'N':
 120   8                                          ++i;
 121   8                                          i %= numSongs-1; //next song with wrap around
 122   8                                          break;
 123   8                                      case 'l':
 124   8                                      case 'L':
 125   8                                          --i;
 126   8                                          i %= numSongs-1; //previous song with wrap
 127   8                                          break;
 128   8                                      case '0':
 129   8                                      case ')':
 130   8                                          i = 0;
 131   8                                          break;
 132   8                                      case '1':
 133   8                                      case '!':
 134   8                                          i = 1;
 135   8                                          break;
 136   8                                      case '2':
 137   8                                      case '@':
 138   8                                          i = 2;
 139   8                                          break;
 140   8                                      case '3':
 141   8                                      case '#';
*** ERROR C141 IN LINE 141 OF MAIN.C: syntax error near ';'
 142   8                                          i = 3;
 143   8                                          break;
 144   8                                      case '4':
 145   8                                      case '$':
 146   8                                          i = 4;
 147   8                                          break;
 148   8                                      case '5':
 149   8                                      case '%':
 150   8                                          i = 5;
 151   8                                          break;
 152   8                                      case '6':
 153   8                                      case '^':
 154   8                                          i = 6;
 155   8                                          break;
 156   8                                      case '7':
 157   8                                      case '&':
 158   8                                          i = 7;
 159   8                                          break;
 160   8                                      case '8':
 161   8                                      case '*':
 162   8                                          i = 8;
 163   8                                          break;
 164   8                                      case '9':
 165   8                                      case '(':
 166   8                                          i = 9;
 167   8                                          break;
 168   8                                      default:
 169   8                                          break;
 170   8                                  }
 171   7                              }
 172   6                          }
 173   5                      }
 174   4                  }
 175   3              }
 176   2          }
 177   1          return 0;
 178   1      }
C51 COMPILER V7.05   MAIN                                                                  12/01/2012 00:33:56 PAGE 4   


C51 COMPILATION COMPLETE.  0 WARNING(S),  1 ERROR(S)

A51 MACRO ASSEMBLER  KBD                                                                  11/19/2012 18:03:55 PAGE     1


MACRO ASSEMBLER A51 V7.04a
OBJECT MODULE PLACED IN kbd.OBJ
ASSEMBLER INVOKED BY: C:\SiLabs\MCU\IDEfiles\C51\BIN\a51.exe kbd.asm XR GEN DB EP NOMOD51

LOC  OBJ            LINE     SOURCE

                       1     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                       2     ;
                       3     ;       Name:   Aseda Gyeke Aboagye
                       4     ;               Joe Orr
                       5     ;               Doug Hewitt
                       6     ;
                       7     ;       kbd.asm --  This module is for handling the scancodes generated from
                       8     ;                   the PS/2 keyboard. Implemented is a state machine which
                       9     ;                   checks the framing of the transaction and checks to
                      10     ;                   ensure that the parity is set correctly.
                      11     ;
                      12     ;                   Once the scancode is received, it inserts the value
                      13     ;                   from the lookup table into a ringbuffer to be used by
                      14     ;                   the main program.
                      15     ;
                      16     ;
                      17     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      18     
                      19     $nomod51 
                      20     
                      21     ;$include (c8051f120.inc) ; Include register definition file.
                +1    22     
                +1    23     ;---------------------------------------------------------------------------
                +1    24     ; 
                +1    25     ; 
                +1    26     ;
                +1    27     ;
                +1    28     ; FILE NAME: C8051F120.INC
                +1    29     ; TARGET MCUs: C8051F120, F121, F122, F123, F124, F125, F126, F127
                +1    30     ; DESCRIPTION: Register/bit definitions for the C8051F120 product family.
                +1    31     ;
                +1    32     ; REVISION 1.6
                +1    33     ;
                +1    34     ;---------------------------------------------------------------------------
                +1    35     
                +1    36     ;REGISTER DEFINITIONS
                +1    37     ;
  0080          +1    38     P0             DATA 080H    ; PORT 0 LATCH
  0081          +1    39     SP             DATA 081H    ; STACK POINTER
  0082          +1    40     DPL            DATA 082H    ; DATA POINTER LOW BYTE
  0083          +1    41     DPH            DATA 083H    ; DATA POINTER HIGH BYTE
  0084          +1    42     SFRPAGE        DATA 084H    ; SFR PAGE SELECT
  0085          +1    43     SFRNEXT        DATA 085H    ; SFR STACK NEXT PAGE
  0086          +1    44     SFRLAST        DATA 086H    ; SFR STACK LAST PAGE
  0087          +1    45     PCON           DATA 087H    ; POWER CONTROL
  0088          +1    46     FLSTAT         DATA 088H    ; FLASH STATUS
  0088          +1    47     CPT0CN         DATA 088H    ; COMPARATOR 0 CONTROL
  0088          +1    48     CPT1CN         DATA 088H    ; COMPARATOR 1 CONTROL
  0088          +1    49     TCON           DATA 088H    ; TIMER/COUNTER CONTROL
  0089          +1    50     TMOD           DATA 089H    ; TIMER/COUNTER MODE
  0089          +1    51     CPT0MD         DATA 089H    ; COMPARATOR 0 CONFIGURATION
  0089          +1    52     CPT1MD         DATA 089H    ; COMPARATOR 1 CONFIGURATION
  0089          +1    53     PLL0CN         DATA 089H    ; PLL CONTROL
  008A          +1    54     OSCICN         DATA 08AH    ; INTERNAL OSCILLATOR CONTROL
  008A          +1    55     TL0            DATA 08AH    ; TIMER/COUNTER 0 LOW BYTE
  008B          +1    56     OSCICL         DATA 08BH    ; INTERNAL OSCILLATOR CALIBRATION
  008B          +1    57     TL1            DATA 08BH    ; TIMER/COUNTER 1 LOW BYTE
  008C          +1    58     OSCXCN         DATA 08CH    ; EXTERNAL OSCILLATOR CONTROL
A51 MACRO ASSEMBLER  KBD                                                                  11/19/2012 18:03:55 PAGE     2

  008C          +1    59     TH0            DATA 08CH    ; TIMER/COUNTER 0 HIGH BYTE
  008D          +1    60     TH1            DATA 08DH    ; TIMER/COUNTER 1 HIGH BYTE
  008D          +1    61     PLL0DIV        DATA 08DH    ; PLL DIVIDER
  008E          +1    62     CKCON          DATA 08EH    ; CLOCK CONTROL
  008E          +1    63     PLL0MUL        DATA 08EH    ; PLL MULTIPLIER
  008F          +1    64     PSCTL          DATA 08FH    ; FLASH WRITE/ERASE CONTROL
  008F          +1    65     PLL0FLT        DATA 08FH    ; PLL FILTER
  0090          +1    66     P1             DATA 090H    ; PORT 1 LATCH
  0091          +1    67     SSTA0          DATA 091H    ; UART 0 STATUS
  0091          +1    68     MAC0BL         DATA 091H    ; MAC0 B REGISTER LOW BYTE
  0092          +1    69     MAC0BH         DATA 092H    ; MAC0 B REGISTER HIGH BYTE
  0093          +1    70     MAC0ACC0       DATA 093H    ; MAC0 ACCUMULATOR BYTE 0
  0094          +1    71     MAC0ACC1       DATA 094H    ; MAC0 ACCUMULATOR BYTE 1
  0095          +1    72     MAC0ACC2       DATA 095H    ; MAC0 ACCUMULATOR BYTE 2
  0096          +1    73     SFRPGCN        DATA 096H    ; SFR PAGE CONTROL
  0096          +1    74     MAC0ACC3       DATA 096H    ; MAC0 ACCUMULATOR BYTE 3
  0097          +1    75     MAC0OVR        DATA 097H    ; MAC0 ACCUMULATOR OVERFLOW BYTE
  0097          +1    76     CLKSEL         DATA 097H    ; SYSTEM CLOCK SELECT
  0098          +1    77     SCON0          DATA 098H    ; UART 0 CONTROL
  0098          +1    78     SCON1          DATA 098H    ; UART 1 CONTROL
  0099          +1    79     SBUF0          DATA 099H    ; UART 0 DATA BUFFER
  0099          +1    80     SBUF1          DATA 099H    ; UART 1 DATA BUFFER
  009A          +1    81     SPI0CFG        DATA 09AH    ; SPI CONFIGURATION
  009A          +1    82     CCH0MA         DATA 09AH    ; CACHE MISS ACCUMULATOR
  009B          +1    83     SPI0DAT        DATA 09BH    ; SPI DATA
  009C          +1    84     P4MDOUT        DATA 09CH    ; PORT 4 OUTPUT MODE CONFIGURATION
  009D          +1    85     P5MDOUT        DATA 09DH    ; PORT 5 OUTPUT MODE CONFIGURATION
  009D          +1    86     SPI0CKR        DATA 09DH    ; SPI CLOCK RATE CONTROL
  009E          +1    87     P6MDOUT        DATA 09EH    ; PORT 6 OUTPUT MODE CONFIGURATION
  009F          +1    88     P7MDOUT        DATA 09FH    ; PORT 7 OUTPUT MODE CONFIGURATION
  00A0          +1    89     P2             DATA 0A0H    ; PORT 2 LATCH
  00A1          +1    90     EMI0TC         DATA 0A1H    ; EMIF TIMING CONTROL
  00A1          +1    91     CCH0CN         DATA 0A1H    ; CACHE CONTROL
  00A2          +1    92     EMI0CN         DATA 0A2H    ; EMIF CONTROL
  00A2          +1    93     CCH0TN         DATA 0A2H    ; CACHE TUNING
  00A3          +1    94     EMI0CF         DATA 0A3H    ; EMIF CONFIGURATION
  00A3          +1    95     CCH0LC         DATA 0A3H    ; CACHE LOCK
  00A4          +1    96     P0MDOUT        DATA 0A4H    ; PORT 0 OUTPUT MODE CONFIGURATION
  00A5          +1    97     P1MDOUT        DATA 0A5H    ; PORT 1 OUTPUT MODE CONFIGURATION
  00A6          +1    98     P2MDOUT        DATA 0A6H    ; PORT 2 OUTPUT MODE CONFIGURATION
  00A7          +1    99     P3MDOUT        DATA 0A7H    ; PORT 3 OUTPUT MODE CONFIGURATION
  00A8          +1   100     IE             DATA 0A8H    ; INTERRUPT ENABLE
  00A9          +1   101     SADDR0         DATA 0A9H    ; UART 0 SLAVE ADDRESS
  00AD          +1   102     P1MDIN         DATA 0ADH    ; PORT 1 INPUT MODE
  00B0          +1   103     P3             DATA 0B0H    ; PORT 3 LATCH
  00B1          +1   104     PSBANK         DATA 0B1H    ; FLASH BANK SELECT
  00B7          +1   105     FLACL          DATA 0B7H    ; FLASH ACCESS LIMIT
  00B7          +1   106     FLSCL          DATA 0B7H    ; FLASH SCALE
  00B8          +1   107     IP             DATA 0B8H    ; INTERRUPT PRIORITY
  00B9          +1   108     SADEN0         DATA 0B9H    ; UART 0 SLAVE ADDRESS MASK
  00BA          +1   109     AMX0CF         DATA 0BAH    ; ADC0 MULTIPLEXER CONFIGURATION
  00BA          +1   110     AMX2CF         DATA 0BAH    ; ADC2 MULTIPLEXER CONFIGURATION
  00BB          +1   111     AMX0SL         DATA 0BBH    ; ADC0 MULTIPLEXER CHANNEL SELECT
  00BB          +1   112     AMX2SL         DATA 0BBH    ; ADC2 MULTIPLEXER CHANNEL SELECT
  00BC          +1   113     ADC0CF         DATA 0BCH    ; ADC0 CONFIGURATION
  00BC          +1   114     ADC2CF         DATA 0BCH    ; ADC2 CONFIGURATION
  00BE          +1   115     ADC0L          DATA 0BEH    ; ADC0 DATA WORD LOW BYTE
  00BE          +1   116     ADC2           DATA 0BEH    ; ADC2DATA WORD
  00BF          +1   117     ADC0H          DATA 0BFH    ; ADC0 DATA WORD HIGH BYTE
  00C0          +1   118     MAC0STA        DATA 0C0H    ; MAC0 STATUS
  00C0          +1   119     SMB0CN         DATA 0C0H    ; SMBUS CONTROL
  00C1          +1   120     MAC0AL         DATA 0C1H    ; MAC0 A REGISTER LOW BYTE
  00C1          +1   121     SMB0STA        DATA 0C1H    ; SMBUS STATUS
  00C2          +1   122     MAC0AH         DATA 0C2H    ; MAC0 A REGISTER HIGH BYTE
  00C2          +1   123     SMB0DAT        DATA 0C2H    ; SMBUS DATA
  00C3          +1   124     MAC0CF         DATA 0C3H    ; MAC0 CONFIGURATION REGISTER
A51 MACRO ASSEMBLER  KBD                                                                  11/19/2012 18:03:55 PAGE     3

  00C3          +1   125     SMB0ADR        DATA 0C3H    ; SMBUS SLAVE ADDRESS
  00C4          +1   126     ADC0GTL        DATA 0C4H    ; ADC0 GREATER-THAN LOW BYTE
  00C4          +1   127     ADC2GT         DATA 0C4H    ; ADC2 GREATER-THAN
  00C5          +1   128     ADC0GTH        DATA 0C5H    ; ADC0 GREATER-THAN HIGH BYTE
  00C6          +1   129     ADC0LTL        DATA 0C6H    ; ADC0 LESS-THAN LOW BYTE
  00C6          +1   130     ADC2LT         DATA 0C6H    ; ADC2 LESS-THAN
  00C7          +1   131     ADC0LTH        DATA 0C7H    ; ADC0 LESS-THAN HIGH BYTE
  00C8          +1   132     P4             DATA 0C8H    ; PORT 4 LATCH
  00C8          +1   133     TMR2CN         DATA 0C8H    ; TIMER/COUNTER 2 CONTROL
  00C8          +1   134     TMR3CN         DATA 0C8H    ; TIMER 3 CONTROL
  00C8          +1   135     TMR4CN         DATA 0C8H    ; TIMER/COUNTER 4 CONTROL
  00C9          +1   136     TMR2CF         DATA 0C9H    ; TIMER/COUNTER 2 CONFIGURATION
  00C9          +1   137     TMR3CF         DATA 0C9H    ; TIMER 3 CONFIGURATION
  00C9          +1   138     TMR4CF         DATA 0C9H    ; TIMER/COUNTER 4 CONFIGURATION
  00CA          +1   139     RCAP2L         DATA 0CAH    ; TIMER/COUNTER 2 CAPTURE/RELOAD LOW BYTE
  00CA          +1   140     RCAP3L         DATA 0CAH    ; TIMER 3 CAPTURE/RELOAD LOW BYTE
  00CA          +1   141     RCAP4L         DATA 0CAH    ; TIMER/COUNTER 4 CAPTURE/RELOAD LOW BYTE
  00CB          +1   142     RCAP2H         DATA 0CBH    ; TIMER/COUNTER 2 CAPTURE/RELOAD HIGH BYTE
  00CB          +1   143     RCAP3H         DATA 0CBH    ; TIMER 3 CAPTURE/RELOAD HIGH BYTE
  00CB          +1   144     RCAP4H         DATA 0CBH    ; TIMER/COUNTER 4 CAPTURE/RELOAD HIGH BYTE
  00CC          +1   145     TMR2L          DATA 0CCH    ; TIMER/COUNTER 2 LOW BYTE
  00CC          +1   146     TMR3L          DATA 0CCH    ; TIMER 3 LOW BYTE
  00CC          +1   147     TMR4L          DATA 0CCH    ; TIMER/COUNTER 4 LOW BYTE
  00CD          +1   148     TMR2H          DATA 0CDH    ; TIMER/COUNTER 2 HIGH BYTE
  00CD          +1   149     TMR3H          DATA 0CDH    ; TIMER 3 HIGH BYTE
  00CD          +1   150     TMR4H          DATA 0CDH    ; TIMER/COUNTER 4 HIGH BYTE
  00CE          +1   151     MAC0RNDL       DATA 0CEH    ; MAC0 ROUNDING REGISTER LOW BYTE
  00CF          +1   152     MAC0RNDH       DATA 0CFH    ; MAC0 ROUNDING REGISTER HIGH BYTE
  00CF          +1   153     SMB0CR         DATA 0CFH    ; SMBUS CLOCK RATE
  00D0          +1   154     PSW            DATA 0D0H    ; PROGRAM STATUS WORD
  00D1          +1   155     REF0CN         DATA 0D1H    ; VOLTAGE REFERENCE CONTROL
  00D2          +1   156     DAC0L          DATA 0D2H    ; DAC0 LOW BYTE
  00D2          +1   157     DAC1L          DATA 0D2H    ; DAC1 LOW BYTE
  00D3          +1   158     DAC0H          DATA 0D3H    ; DAC0 HIGH BYTE
  00D3          +1   159     DAC1H          DATA 0D3H    ; DAC1 HIGH BYTE
  00D4          +1   160     DAC0CN         DATA 0D4H    ; DAC0 CONTROL
  00D4          +1   161     DAC1CN         DATA 0D4H    ; DAC1 CONTROL
  00D8          +1   162     P5             DATA 0D8H    ; PORT 5 LATCH
  00D8          +1   163     PCA0CN         DATA 0D8H    ; PCA CONTROL
  00D9          +1   164     PCA0MD         DATA 0D9H    ; PCA MODE
  00DA          +1   165     PCA0CPM0       DATA 0DAH    ; PCA MODULE 0 MODE
  00DB          +1   166     PCA0CPM1       DATA 0DBH    ; PCA MODULE 1 MODE REGISTER
  00DC          +1   167     PCA0CPM2       DATA 0DCH    ; PCA MODULE 2 MODE
  00DD          +1   168     PCA0CPM3       DATA 0DDH    ; PCA MODULE 3 MODE
  00DE          +1   169     PCA0CPM4       DATA 0DEH    ; PCA MODULE 4 MODE
  00DF          +1   170     PCA0CPM5       DATA 0DFH    ; PCA MODULE 5 MODE
  00E0          +1   171     ACC            DATA 0E0H    ; ACCUMULATOR
  00E1          +1   172     XBR0           DATA 0E1H    ; PORT I/O CROSSBAR CONTROL 0
  00E1          +1   173     PCA0CPL5       DATA 0E1H    ; PCA MODULE 5 CAPTURE/COMPARE LOW BYTE
  00E2          +1   174     PCA0CPH5       DATA 0E2H    ; PCA MODULE 5 CAPTURE/COMPARE HIGH BYTE
  00E2          +1   175     XBR1           DATA 0E2H    ; PORT I/O CROSSBAR CONTROL 1
  00E3          +1   176     XBR2           DATA 0E3H    ; PORT I/O CROSSBAR CONTROL 2
  00E6          +1   177     EIE1           DATA 0E6H    ; EXTENDED INTERRUPT ENABLE 1
  00E7          +1   178     EIE2           DATA 0E7H    ; EXTENDED INTERRUPT ENABLE 2
  00E8          +1   179     ADC0CN         DATA 0E8H    ; ADC0 CONTROL
  00E8          +1   180     ADC2CN         DATA 0E8H    ; ADC2 CONTROL
  00E8          +1   181     P6             DATA 0E8H    ; PORT 6 LATCH
  00E9          +1   182     PCA0CPL2       DATA 0E9H    ; PCA MODULE 2 CAPTURE/COMPARE LOW BYTE
  00EA          +1   183     PCA0CPH2       DATA 0EAH    ; PCA MODULE 2 CAPTURE/COMPARE HIGH BYTE
  00EB          +1   184     PCA0CPL3       DATA 0EBH    ; PCA MODULE 3 CAPTURE/COMPARE LOW BYTE
  00EC          +1   185     PCA0CPH3       DATA 0ECH    ; PCA MODULE 3 CAPTURE/COMPARE HIGH BYTE
  00ED          +1   186     PCA0CPL4       DATA 0EDH    ; PCA MODULE 4 CAPTURE/COMPARE LOW BYTE
  00EE          +1   187     PCA0CPH4       DATA 0EEH    ; PCA MODULE 4 CAPTURE/COMPARE HIGH BYTE
  00EF          +1   188     RSTSRC         DATA 0EFH    ; RESET SOURCE
  00F0          +1   189     B              DATA 0F0H    ; B REGISTER
  00F6          +1   190     EIP1           DATA 0F6H    ; EXTERNAL INTERRUPT PRIORITY 1
A51 MACRO ASSEMBLER  KBD                                                                  11/19/2012 18:03:55 PAGE     4

  00F7          +1   191     EIP2           DATA 0F7H    ; EXTERNAL INTERRUPT PRIORITY 2
  00F8          +1   192     P7             DATA 0F8H    ; PORT 7 LATCH
  00F8          +1   193     SPI0CN         DATA 0F8H    ; SPI CONTROL
  00F9          +1   194     PCA0L          DATA 0F9H    ; PCA COUNTER LOW BYTE
  00FA          +1   195     PCA0H          DATA 0FAH    ; PCA COUNTER HIGH BYTE
  00FB          +1   196     PCA0CPL0       DATA 0FBH    ; PCA MODULE 0 CAPTURE/COMPARE LOW BYTE
  00FC          +1   197     PCA0CPH0       DATA 0FCH    ; PCA MODULE 0 CAPTURE/COMPARE HIGH BYTE
  00FD          +1   198     PCA0CPL1       DATA 0FDH    ; PCA MODULE 1 CAPTURE/COMPARE LOW BYTE
  00FE          +1   199     PCA0CPH1       DATA 0FEH    ; PCA MODULE 1 CAPTURE/COMPARE HIGH BYTE
  00FF          +1   200     WDTCN          DATA 0FFH    ; WATCHDOG TIMER CONTROL
                +1   201     
                +1   202     ;
                +1   203     ;------------------------------------------------------------------------------
                +1   204     ;BIT DEFINITIONS
                +1   205     ;
                +1   206     ; TCON 088H
  008F          +1   207     TF1            BIT 08FH     ; TIMER 1 OVERFLOW FLAG
  008E          +1   208     TR1            BIT 08EH     ; TIMER 1 ON/OFF CONTROL
  008D          +1   209     TF0            BIT 08DH     ; TIMER 0 OVERFLOW FLAG
  008C          +1   210     TR0            BIT 08CH     ; TIMER 0 ON/OFF CONTROL
  008B          +1   211     IE1            BIT 08BH     ; EXT. INTERRUPT 1 EDGE FLAG
  008A          +1   212     IT1            BIT 08AH     ; EXT. INTERRUPT 1 TYPE
  0089          +1   213     IE0            BIT 089H     ; EXT. INTERRUPT 0 EDGE FLAG
  0088          +1   214     IT0            BIT 088H     ; EXT. INTERRUPT 0 TYPE
                +1   215     
                +1   216     ; CPT0CN 088H
  008F          +1   217     CP0EN          BIT 08FH     ; COMPARATOR 0 ENABLE
  008E          +1   218     CP0OUT         BIT 08EH     ; COMPARATOR 0 OUTPUT
  008D          +1   219     CP0RIF         BIT 08DH     ; COMPARATOR 0 RISING EDGE INTERRUPT
  008C          +1   220     CP0FIF         BIT 08CH     ; COMPARATOR 0 FALLING EDGE INTERRUPT
  008B          +1   221     CP0HYP1        BIT 08BH     ; COMPARATOR 0 POSITIVE HYSTERISIS 1
  008A          +1   222     CP0HYP0        BIT 08AH     ; COMPARATOR 0 POSITIVE HYSTERISIS 0
  0089          +1   223     CP0HYN1        BIT 089H     ; COMPARATOR 0 NEGATIVE HYSTERISIS 1
  0088          +1   224     CP0HYN0        BIT 088H     ; COMPARATOR 0 NEGATIVE HYSTERISIS 0
                +1   225     
                +1   226     ; CPT1CN 088H
  008F          +1   227     CP1EN          BIT 08FH     ; COMPARATOR 1 ENABLE
  008E          +1   228     CP1OUT         BIT 08EH     ; COMPARATOR 1 OUTPUT
  008D          +1   229     CP1RIF         BIT 08DH     ; COMPARATOR 1 RISING EDGE INTERRUPT
  008C          +1   230     CP1FIF         BIT 08CH     ; COMPARATOR 1 FALLING EDGE INTERRUPT
  008B          +1   231     CP1HYP1        BIT 08BH     ; COMPARATOR 1 POSITIVE HYSTERISIS 1
  008A          +1   232     CP1HYP0        BIT 08AH     ; COMPARATOR 1 POSITIVE HYSTERISIS 0
  0089          +1   233     CP1HYN1        BIT 089H     ; COMPARATOR 1 NEGATIVE HYSTERISIS 1
  0088          +1   234     CP1HYN0        BIT 088H     ; COMPARATOR 1 NEGATIVE HYSTERISIS 0
                +1   235     
                +1   236     ; FLSTAT 088H
  0088          +1   237     FLHBUSY        BIT 088H     ; FLASH BUSY
                +1   238     
                +1   239     ; SCON0 098H
  009F          +1   240     SM00           BIT 09FH     ; UART 0 MODE 0
  009E          +1   241     SM10           BIT 09EH     ; UART 0 MODE 1
  009D          +1   242     SM20           BIT 09DH     ; UART 0 MULTIPROCESSOR EN
  009C          +1   243     REN0           BIT 09CH     ; UART 0 RX ENABLE
  009B          +1   244     TB80           BIT 09BH     ; UART 0 TX BIT 8
  009A          +1   245     RB80           BIT 09AH     ; UART 0 RX BIT 8
  0099          +1   246     TI0            BIT 099H     ; UART 0 TX INTERRUPT FLAG
  0098          +1   247     RI0            BIT 098H     ; UART 0 RX INTERRUPT FLAG
                +1   248     
                +1   249     ; SCON1 098H
  009F          +1   250     S1MODE         BIT 09FH     ; UART 1 MODE
  009D          +1   251     MCE1           BIT 09DH     ; UART 1 MCE
  009C          +1   252     REN1           BIT 09CH     ; UART 1 RX ENABLE
  009B          +1   253     TB81           BIT 09BH     ; UART 1 TX BIT 8
  009A          +1   254     RB81           BIT 09AH     ; UART 1 RX BIT 8
  0099          +1   255     TI1            BIT 099H     ; UART 1 TX INTERRUPT FLAG
  0098          +1   256     RI1            BIT 098H     ; UART 1 RX INTERRUPT FLAG
A51 MACRO ASSEMBLER  KBD                                                                  11/19/2012 18:03:55 PAGE     5

                +1   257     
                +1   258     ; IE 0A8H
  00AF          +1   259     EA             BIT 0AFH     ; GLOBAL INTERRUPT ENABLE
  00AD          +1   260     ET2            BIT 0ADH     ; TIMER 2 INTERRUPT ENABLE
  00AC          +1   261     ES0            BIT 0ACH     ; UART0 INTERRUPT ENABLE
  00AB          +1   262     ET1            BIT 0ABH     ; TIMER 1 INTERRUPT ENABLE
  00AA          +1   263     EX1            BIT 0AAH     ; EXTERNAL INTERRUPT 1 ENABLE
  00A9          +1   264     ET0            BIT 0A9H     ; TIMER 0 INTERRUPT ENABLE
  00A8          +1   265     EX0            BIT 0A8H     ; EXTERNAL INTERRUPT 0 ENABLE
                +1   266     
                +1   267     ; IP 0B8H
  00BD          +1   268     PT2            BIT 0BDH     ; TIMER 2 PRIORITY
  00BC          +1   269     PS             BIT 0BCH     ; SERIAL PORT PRIORITY
  00BB          +1   270     PT1            BIT 0BBH     ; TIMER 1 PRIORITY
  00BA          +1   271     PX1            BIT 0BAH     ; EXTERNAL INTERRUPT 1 PRIORITY
  00B9          +1   272     PT0            BIT 0B9H     ; TIMER 0 PRIORITY
  00B8          +1   273     PX0            BIT 0B8H     ; EXTERNAL INTERRUPT 0 PRIORITY
                +1   274     
                +1   275     ; SMB0CN 0C0H
  00C7          +1   276     BUSY           BIT 0C7H     ; SMBUS 0 BUSY
  00C6          +1   277     ENSMB          BIT 0C6H     ; SMBUS 0 ENABLE
  00C5          +1   278     STA            BIT 0C5H     ; SMBUS 0 START FLAG
  00C4          +1   279     STO            BIT 0C4H     ; SMBUS 0 STOP FLAG
  00C3          +1   280     SI             BIT 0C3H     ; SMBUS 0 INTERRUPT PENDING FLAG
  00C2          +1   281     AA             BIT 0C2H     ; SMBUS 0 ASSERT/ACKNOWLEDGE FLAG
  00C1          +1   282     SMBFTE         BIT 0C1H     ; SMBUS 0 FREE TIMER ENABLE
  00C0          +1   283     SMBTOE         BIT 0C0H     ; SMBUS 0 TIMEOUT ENABLE
                +1   284     
                +1   285     ; MAC0STA 0C0H
  00C3          +1   286     MAC0HO         BIT 0C3H     ; MAC0 HARD OVERFLOW
  00C2          +1   287     MAC0Z          BIT 0C2H     ; MAC0 ZERO
  00C1          +1   288     MAC0SO         BIT 0C1H     ; MAC0 SOFT OVERFLOW
  00C0          +1   289     MAC0N          BIT 0C0H     ; MAC0 NEGATIVE
                +1   290     
                +1   291     ; TMR2CN 0C8H
  00CF          +1   292     TF2            BIT 0CFH     ; TIMER 2 OVERFLOW FLAG
  00CE          +1   293     EXF2           BIT 0CEH     ; TIMER 2 EXTERNAL FLAG
  00CB          +1   294     EXEN2          BIT 0CBH     ; TIMER 2 EXTERNAL ENABLE FLAG
  00CA          +1   295     TR2            BIT 0CAH     ; TIMER 2 ON/OFF CONTROL
  00C9          +1   296     CT2            BIT 0C9H     ; TIMER 2 COUNTER SELECT
  00C8          +1   297     CPRL2          BIT 0C8H     ; TIMER 2 CAPTURE SELECT
                +1   298     
                +1   299     ; TMR3CN 0C8H
  00CF          +1   300     TF3            BIT 0CFH     ; TIMER 3 OVERFLOW FLAG
  00CE          +1   301     EXF3           BIT 0CEH     ; TIMER 3 EXTERNAL FLAG
  00CB          +1   302     EXEN3          BIT 0CBH     ; TIMER 3 EXTERNAL ENABLE FLAG
  00CA          +1   303     TR3            BIT 0CAH     ; TIMER 3 ON/OFF CONTROL
  00C9          +1   304     CT3            BIT 0C9H     ; TIMER 3 COUNTER SELECT
  00C8          +1   305     CPRL3          BIT 0C8H     ; TIMER 3 CAPTURE SELECT
                +1   306     
                +1   307     ; TMR4CN 0C8H
  00CF          +1   308     TF4            BIT 0CFH     ; TIMER 4 OVERFLOW FLAG
  00CE          +1   309     EXF4           BIT 0CEH     ; TIMER 4 EXTERNAL FLAG
  00CB          +1   310     EXEN4          BIT 0CBH     ; TIMER 4 EXTERNAL ENABLE FLAG
  00CA          +1   311     TR4            BIT 0CAH     ; TIMER 4 ON/OFF CONTROL
  00C9          +1   312     CT4            BIT 0C9H     ; TIMER 4 COUNTER SELECT
  00C8          +1   313     CPRL4          BIT 0C8H     ; TIMER 4 CAPTURE SELECT
                +1   314     
                +1   315     ; PSW 0D0H
  00D7          +1   316     CY             BIT 0D7H     ; CARRY FLAG
  00D6          +1   317     AC             BIT 0D6H     ; AUXILIARY CARRY FLAG
  00D5          +1   318     F0             BIT 0D5H     ; USER FLAG 0
  00D4          +1   319     RS1            BIT 0D4H     ; REGISTER BANK SELECT 1
  00D3          +1   320     RS0            BIT 0D3H     ; REGISTER BANK SELECT 0
  00D2          +1   321     OV             BIT 0D2H     ; OVERFLOW FLAG
  00D1          +1   322     F1             BIT 0D1H     ; USER FLAG 1
A51 MACRO ASSEMBLER  KBD                                                                  11/19/2012 18:03:55 PAGE     6

  00D0          +1   323     P              BIT 0D0H     ; ACCUMULATOR PARITY FLAG
                +1   324     
                +1   325     ; PCA0CN 0D8H
  00DF          +1   326     CF             BIT 0DFH     ; PCA 0 COUNTER OVERFLOW FLAG
  00DE          +1   327     CR             BIT 0DEH     ; PCA 0 COUNTER RUN CONTROL BIT
  00DD          +1   328     CCF5           BIT 0DDH     ; PCA 0 MODULE 5 INTERRUPT FLAG
  00DC          +1   329     CCF4           BIT 0DCH     ; PCA 0 MODULE 4 INTERRUPT FLAG
  00DB          +1   330     CCF3           BIT 0DBH     ; PCA 0 MODULE 3 INTERRUPT FLAG
  00DA          +1   331     CCF2           BIT 0DAH     ; PCA 0 MODULE 2 INTERRUPT FLAG
  00D9          +1   332     CCF1           BIT 0D9H     ; PCA 0 MODULE 1 INTERRUPT FLAG
  00D8          +1   333     CCF0           BIT 0D8H     ; PCA 0 MODULE 0 INTERRUPT FLAG
                +1   334     
                +1   335     ; ADC0CN 0E8H
  00EF          +1   336     AD0EN          BIT 0EFH     ; ADC 0 ENABLE
  00EE          +1   337     AD0TM          BIT 0EEH     ; ADC 0 TRACK MODE
  00ED          +1   338     AD0INT         BIT 0EDH     ; ADC 0 EOC INTERRUPT FLAG
  00EC          +1   339     AD0BUSY        BIT 0ECH     ; ADC 0 BUSY FLAG
  00EB          +1   340     AD0CM1         BIT 0EBH     ; ADC 0 CONVERT START MODE BIT 1
  00EA          +1   341     AD0CM0         BIT 0EAH     ; ADC 0 CONVERT START MODE BIT 0
  00E9          +1   342     AD0WINT        BIT 0E9H     ; ADC 0 WINDOW INTERRUPT FLAG
  00E8          +1   343     AD0LJST        BIT 0E8H     ; ADC 0 LEFT JUSTIFY DATA BIT
                +1   344     
                +1   345     ; ADC2CN 0E8H
  00EF          +1   346     AD2EN          BIT 0EFH     ; ADC 2 ENABLE
  00EE          +1   347     AD2TM          BIT 0EEH     ; ADC 2 TRACK MODE
  00ED          +1   348     AD2INT         BIT 0EDH     ; ADC 2 EOC INTERRUPT FLAG
  00EC          +1   349     AD2BUSY        BIT 0ECH     ; ADC 2 BUSY FLAG
  00EB          +1   350     AD2CM2         BIT 0EBH     ; ADC 2 CONVERT START MODE BIT 2
  00EA          +1   351     AD2CM1         BIT 0EAH     ; ADC 2 CONVERT START MODE BIT 1
  00E9          +1   352     AD2CM0         BIT 0E9H     ; ADC 2 CONVERT START MODE BIT 0
  00E8          +1   353     AD2WINT        BIT 0E8H     ; ADC 2 WINDOW INTERRUPT FLAG
                +1   354     
                +1   355     ; SPI0CN 0F8H
  00FF          +1   356     SPIF           BIT 0FFH     ; SPI 0 INTERRUPT FLAG
  00FE          +1   357     WCOL           BIT 0FEH     ; SPI 0 WRITE COLLISION FLAG
  00FD          +1   358     MODF           BIT 0FDH     ; SPI 0 MODE FAULT FLAG
  00FC          +1   359     RXOVRN         BIT 0FCH     ; SPI 0 RX OVERRUN FLAG
  00FB          +1   360     NSSMD1         BIT 0FBH     ; SPI 0 SLAVE SELECT MODE 1
  00FA          +1   361     NSSMD0         BIT 0FAH     ; SPI 0 SLAVE SELECT MODE 0
  00F9          +1   362     TXBMT          BIT 0F9H     ; SPI 0 TX BUFFER EMPTY FLAG
  00F8          +1   363     SPIEN          BIT 0F8H     ; SPI 0 SPI ENABLE
                +1   364     
                +1   365     ;
                +1   366     ;------------------------------------------------------------------------------
                +1   367     ; SFR PAGE DEFINITIONS
                +1   368     ;
  000F          +1   369     CONFIG_PAGE                 EQU 0FH   ; SYSTEM AND PORT CONFIGURATION PAGE
  0000          +1   370     LEGACY_PAGE                 EQU 00H   ; LEGACY SFR PAGE
  0000          +1   371     TIMER01_PAGE                EQU 00H   ; TIMER 0 AND TIMER 1
  0001          +1   372     CPT0_PAGE                   EQU 01H   ; COMPARATOR 0
  0002          +1   373     CPT1_PAGE                   EQU 02H   ; COMPARATOR 1
  0000          +1   374     UART0_PAGE                  EQU 00H   ; UART 0
  0001          +1   375     UART1_PAGE                  EQU 01H   ; UART 1
  0000          +1   376     SPI0_PAGE                   EQU 00H   ; SPI 0
  0000          +1   377     EMI0_PAGE                   EQU 00H   ; EXTERNAL MEMORY INTERFACE
  0000          +1   378     ADC0_PAGE                   EQU 00H   ; ADC 0
  0002          +1   379     ADC2_PAGE                   EQU 02H   ; ADC 2
  0000          +1   380     SMB0_PAGE                   EQU 00H   ; SMBUS 0
  0000          +1   381     TMR2_PAGE                   EQU 00H   ; TIMER 2
  0001          +1   382     TMR3_PAGE                   EQU 01H   ; TIMER 3
  0002          +1   383     TMR4_PAGE                   EQU 02H   ; TIMER 4
  0000          +1   384     DAC0_PAGE                   EQU 00H   ; DAC 0
  0001          +1   385     DAC1_PAGE                   EQU 01H   ; DAC 1
  0000          +1   386     PCA0_PAGE                   EQU 00H   ; PCA 0
  000F          +1   387     PLL0_PAGE                   EQU 0FH   ; PLL 0
  0003          +1   388     MAC0_PAGE                   EQU 03H   ; MAC 0
A51 MACRO ASSEMBLER  KBD                                                                  11/19/2012 18:03:55 PAGE     7

                +1   389     
                     390     public  kbinit, kbcheck
                     391     
                     392             using   0
                     393     
  0004               394     QUEUELEN EQU    4                                   ; queue holds four characters
                     395     
                     396     kbdidat segment idata
----                 397             rseg    kbdidat
0000                 398     kbdq:   ds      QUEUELEN                            ; the actual queue
                     399     
                     400     kbddata segment data                                ; variable storage
----                 401             rseg    kbddata
0000                 402     queuesize: ds   1                                   ; count of items in the queue
0001                 403     head:   ds      1                                   ; address of queue head (insertion)
0002                 404     tail:   ds      1                                   ; address of queue tail (extraction)
0003                 405     state:      ds      1                               ; state variable
0004                 406     scan_code:  ds      1                               ; scan code from kb
0005                 407     kbchar:     ds      1                               ; ascii char from scan code
0006                 408     count:      ds      1                               ; used in switch statement
                     409     
                     410     kbdbits segment bit                                 ; bit variables
----                 411             rseg    kbdbits
0000                 412     parity:     dbit    1
0001                 413     cparity:    dbit    1                               ; calculated parity
0002                 414     start_bit:  dbit    1
0003                 415     stop_bit:   dbit    1
0004                 416     char_ready: dbit    1                               ; kbchar is valid and ready
0005                 417     shifted:    dbit    1
0006                 418     ctrled:     dbit    1
0007                 419     breaked:    dbit    1
                     420     
----                 421             cseg    at 0*8+3                            ; interrupt is priority 0
0003 020000   F      422             ljmp    kbprocess                           ; these aren't the droids you're lookin
                             g for
                     423      
                     424     kbdcode segment code
----                 425             rseg    kbdcode                             ; your code
                     426     
0000                 427     kbinit:
                     428             extrn   code(keytab, keytab2), number(minkey, maxkey)
  00D0               429             aparity     EQU     PSW.0                   ; psw even parity bit for A
  00A2               430             kbpin       EQU     P2.2
  0000               431             sc_error    EQU     000H                    ; error code? i'm really just making st
                             uff up at this point
0000 750000   F      432             mov         state,#0
0003 C200     F      433             clr         shifted
0005 C200     F      434             clr         ctrled
0007 C200     F      435             clr         breaked
                     436     
0009 750004   F      437             mov     queuesize, #QUEUELEN                ; initialize the queue
000C 750000   F      438             mov     head, #kbdq
000F 750000   F      439             mov     tail, #kbdq
0012 7800     F      440             mov     r0, #kbdq                           ; for testing, put "no character" value
0014 76FF            441             mov     @r0,#0ffH                           ;   at the tail of the queue
                     442     
0016 75840F          443             mov     SFRPAGE,#0FH
0019 43A801          444             orl     IE,#1                               ; enable external interrupt
001C 43B801          445             orl     IP,#1
001F 43E204          446             orl     XBR1,#00000100b
0022 758400          447             mov     SFRPAGE,#0
0025 D288            448             setb     IT0
0027 22              449             ret
                     450     
0028                 451     kbprocess:
0028 C0E0            452             push    ACC                                 ; save general registers' state
A51 MACRO ASSEMBLER  KBD                                                                  11/19/2012 18:03:55 PAGE     8

002A C0F0            453             push    B
002C C083            454             push    DPH
002E C082            455             push    DPL
0030 C0D0            456             push    PSW
0032 E500     F      457             mov     A,state
0034 23              458             rl      A                                   ; x2 to account for ajmp in table
0035 900000   F      459             mov     DPTR,#table
0038 73              460             jmp     @A+DPTR
0039 0100     F      461     table:  ajmp  rx_start_bit                          ; state 0
003B 0100     F      462             ajmp  rx_data                               ; state 1
003D 0100     F      463             ajmp  rx_parity                             ; state 2
003F 0100     F      464             ajmp  rx_stop_bit                           ; state 3
0041                 465       rx_start_bit:
0041 A2A2            466             mov     C,kbpin
0043 9200     F      467             mov     start_bit,C
0045 750080   F      468             mov     scan_code,#80H                      ; same as 10000000B (MSB set for flaggi
                             ng rx_data as done)
0048 750000   F      469             mov     kbchar,#sc_error
004B 0500     F      470             inc     state
004D 020000   F      471             jmp     done
0050                 472       rx_data:
0050 A2A2            473             mov     C,kbpin
0052 E500     F      474             mov     A,scan_code
0054 13              475             rrc     A                                   ; add bit to carry, shift right into MS
                             B
0055 F500     F      476             mov     scan_code,A
0057 5005            477             jnc     hack                                ; if carry is set, we're done with data
                             , otherwise repeat this state
0059 0500     F      478             inc     state
005B 020000   F      479             jmp     done
005E 020000   F      480     hack:   jmp done
0061                 481       rx_parity:
0061 A2A2            482             mov     C,kbpin
0063 9200     F      483             mov     parity,C
0065 E500     F      484             mov     A,scan_code
0067 A2D0            485             mov     C,aparity
0069 B3              486             cpl     C
006A 9200     F      487             mov     cparity,C                           ; calculated odd parity
006C 0500     F      488             inc     state
006E 020000   F      489             jmp     done
0071                 490       rx_stop_bit:
0071 A2A2            491             mov     C,kbpin
0073 9200     F      492             mov     stop_bit,C
0075                 493       valid_chk:                                        ; for a valid scan_code: start_bit = 0 
                             && cparity = parity && stop_bit = 1
0075 A200     F      494             mov     C,parity
0077 8200     F      495             anl     C,cparity
0079 4006            496             jc      framing                             ; check if cparity == 1 && parity == 1
007B A200     F      497             mov     C,parity
007D 7200     F      498             orl     C,cparity                           ; check if cparity == 0 && parity == 0 
                                 
007F 402F            499             jc      rx_error
0081                 500         framing:
0081 A200     F      501             mov     C,stop_bit
0083 B000     F      502             anl     C,/start_bit                        ; check if start_bit = 0 && stop_bit = 
                             1
0085 5029            503             jnc     rx_error
0087                 504       lookup:
0087 E500     F      505             mov     A,scan_code                         ; get scancode
0089 C3              506             clr     C
008A 9400     F      507             subb    A,#minkey                           ; check if scancode is smaller than min
                             key
008C 4022            508             jc      rx_error
008E 900000   F      509             mov     DPTR,#keytab                        ; assume no control key
0091 300003   F      510             jnb     ctrled,next                         ; if ctrl was pressed, use keytab2 inst
                             ead
A51 MACRO ASSEMBLER  KBD                                                                  11/19/2012 18:03:55 PAGE     9

0094 900000   F      511             mov     DPTR,#keytab2
0097                 512         next:
0097 A200     F      513             mov     C,shifted
0099 B3              514             cpl     C
009A 33              515             rlc     A
009B 93              516             movc    A,@A+DPTR
009C F500     F      517             mov     kbchar,A
009E 20E717          518             jb      ACC.7,special_key
00A1 200002   F      519             jb      breaked,clrbreak
00A4 8057            520             jmp     valid_char                          ; value in kbchar is ready for whatever
                              (ring buffer)
00A6                 521         clrbreak:
00A6 750000   F      522             mov     kbchar,#sc_error                    ; if the breaked flag is set, ignore ch
                             ar
00A9 C200     F      523             clr     breaked
00AB                 524       reset_state:
00AB 750000   F      525             mov     state,#0
00AE 8063            526             jmp     done
00B0                 527       rx_error:
00B0 750000   F      528             mov     scan_code,#sc_error
00B3 750000   F      529             mov     kbchar,#sc_error
00B6 80F3            530             sjmp    reset_state
00B8                 531       special_key:
00B8 900000   F      532             mov     DPTR,#cases                         ; cases, case, and switch should all wo
                             rk together like a switch statement, but who knows
  0004               533             maxC    EQU 4                               ; # of cases      
00BB 7500FF   F      534             mov     count,#-1
00BE                 535         case:
00BE 0500     F      536             inc     count
00C0 E500     F      537             mov     A,count
00C2 B40402          538             cjne    A,#maxC,continue                    ; jump to else case if no cases match
00C5 8031            539             jmp     case_end
00C7                 540             continue:
00C7 93              541             movc    A,@A+DPTR
00C8 B500F3   F      542             cjne    A,scan_code,case
00CB E500     F      543             mov     A,count
00CD 23              544             rl      A
00CE 900000   F      545             mov     DPTR,#switch
00D1 73              546             jmp     @A+DPTR
00D2 12              547         cases:  db      012H                            ; left shift
00D3 59              548                 db      059H                            ; right shift
00D4 14              549                 db      014H                            ; ctrl
00D5 F0              550                 db      0F0H                            ; break
00D6 0100     F      551         switch: ajmp    case_shift
00D8 0100     F      552                 ajmp    case_shift
00DA 0100     F      553                 ajmp    case_ctrl
00DC 0100     F      554                 ajmp    case_break
00DE                 555         case_shift:
00DE D200     F      556             setb    shifted
00E0 300004   F      557             jnb     breaked,nobreaks                    ; if break code is flagged, unset shift
                              and break flags
00E3 C200     F      558             clr     shifted
00E5 C200     F      559             clr     breaked
00E7                 560           nobreaks:
00E7 800F            561             jmp     case_end
00E9                 562         case_ctrl:
00E9 D200     F      563             setb    ctrled
00EB 300004   F      564             jnb     breaked,nobreakc                    ; if break code is flagged, unset ctrl 
                             and break flags
00EE C200     F      565             clr     ctrled
00F0 C200     F      566             clr     breaked
00F2                 567           nobreakc:
00F2 8004            568             jmp     case_end
00F4                 569         case_break:
00F4 D200     F      570             setb    breaked
00F6 8000            571             jmp     case_end
A51 MACRO ASSEMBLER  KBD                                                                  11/19/2012 18:03:55 PAGE    10

00F8                 572         case_end:                                       ; end of case statement
00F8 750000   F      573             mov     kbchar,#sc_error
00FB 80AE            574             jmp     reset_state
00FD                 575     valid_char:
00FD C000            576             push    AR0                                 ; save R0
00FF A800     F      577             mov     R0,head
0101 A600     F      578             mov     @R0,kbchar                          ; ring[head] = item(kbchar)
0103 0500     F      579                                     inc     head
0105 1500     F      580                                     dec                     queuesize
0107 E500     F      581                                     mov                     A,head
0109 B40003   F      582             cjne    A,#kbdq+QUEUELEN,nowrap             ; how much is free in ring buffer
010C 750000   F      583                                     mov                     head,#kbdq
010F                 584     nowrap:
010F D000            585             pop     AR0
0111 8098            586             jmp     reset_state
0113                 587     done:
0113 D0D0            588             pop     PSW                                 ; restore general registers
0115 D082            589             pop     DPL
0117 D083            590             pop     DPH
0119 D0F0            591             pop     B
011B D0E0            592             pop     ACC
011D 32              593             reti                                         ;from kbprocess
                     594     
011E                 595     kbcheck:
011E C0E0            596             push    acc
                     597     ;;;;    REMOVE THESE 4 LINES WHEN YOU HAVE IMPLEMENTED RING BUFFER INSERTION
                     598     ;        mov     a,#0ffH         ; get "no character" value
                     599     ;        mov     r0, #kbdq
                     600     ;        xch     a, @r0          ; swap actual character with "no character"
                     601     ;        mov     R7,a            ; move into return register
                     602     ;        jmp     wraptail        ; exit
                     603     ;;;;
0120 E500     F      604             mov     a, queuesize                        ; see if there are chars in queue
0122 B40405          605             cjne    a, #QUEUELEN, gotchar               ; not equal means yes
0125 7FFF            606             mov     r7, #-1                             ; return "no char" value
0127 D0E0            607             pop     acc
0129 22              608             ret
012A                 609     gotchar:
                     610             ;; clr     EA                               ; avoid race condition
012A A800     F      611             mov     r0,tail                             ; get queue tail pointer
012C E6              612             mov     a,@r0                               ; get from queue
012D FF              613             mov     r7,a                                ; put in register to return
012E 0500     F      614             inc     queuesize                           ; adjust free count
                     615             ;; setb    EA
0130 0500     F      616             inc     tail                                ; update tail pointer
0132 E500     F      617             mov     a, tail
0134 B40003   F      618             cjne    a, #kbdq+QUEUELEN, wraptail         ; check for queue wrap
0137 750000   F      619             mov     tail, #kbdq
013A                 620     wraptail:
013A D0E0            621             pop     acc
013C 22              622             ret
                     623     
                     624             end
A51 MACRO ASSEMBLER  KBD                                                                  11/19/2012 18:03:55 PAGE    11

XREF SYMBOL TABLE LISTING
---- ------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES / REFERENCES

AA . . . . . . . .  B ADDR   00C0H.2 A      281#
AC . . . . . . . .  B ADDR   00D0H.6 A      317#
ACC. . . . . . . .  D ADDR   00E0H   A      171# 452 518 592 596 607 621
AD0BUSY. . . . . .  B ADDR   00E8H.4 A      339#
AD0CM0 . . . . . .  B ADDR   00E8H.2 A      341#
AD0CM1 . . . . . .  B ADDR   00E8H.3 A      340#
AD0EN. . . . . . .  B ADDR   00E8H.7 A      336#
AD0INT . . . . . .  B ADDR   00E8H.5 A      338#
AD0LJST. . . . . .  B ADDR   00E8H.0 A      343#
AD0TM. . . . . . .  B ADDR   00E8H.6 A      337#
AD0WINT. . . . . .  B ADDR   00E8H.1 A      342#
AD2BUSY. . . . . .  B ADDR   00E8H.4 A      349#
AD2CM0 . . . . . .  B ADDR   00E8H.1 A      352#
AD2CM1 . . . . . .  B ADDR   00E8H.2 A      351#
AD2CM2 . . . . . .  B ADDR   00E8H.3 A      350#
AD2EN. . . . . . .  B ADDR   00E8H.7 A      346#
AD2INT . . . . . .  B ADDR   00E8H.5 A      348#
AD2TM. . . . . . .  B ADDR   00E8H.6 A      347#
AD2WINT. . . . . .  B ADDR   00E8H.0 A      353#
ADC0CF . . . . . .  D ADDR   00BCH   A      113#
ADC0CN . . . . . .  D ADDR   00E8H   A      179#
ADC0GTH. . . . . .  D ADDR   00C5H   A      128#
ADC0GTL. . . . . .  D ADDR   00C4H   A      126#
ADC0H. . . . . . .  D ADDR   00BFH   A      117#
ADC0L. . . . . . .  D ADDR   00BEH   A      115#
ADC0LTH. . . . . .  D ADDR   00C7H   A      131#
ADC0LTL. . . . . .  D ADDR   00C6H   A      129#
ADC0_PAGE. . . . .  N NUMB   0000H   A      378#
ADC2 . . . . . . .  D ADDR   00BEH   A      116#
ADC2CF . . . . . .  D ADDR   00BCH   A      114#
ADC2CN . . . . . .  D ADDR   00E8H   A      180#
ADC2GT . . . . . .  D ADDR   00C4H   A      127#
ADC2LT . . . . . .  D ADDR   00C6H   A      130#
ADC2_PAGE. . . . .  N NUMB   0002H   A      379#
AMX0CF . . . . . .  D ADDR   00BAH   A      109#
AMX0SL . . . . . .  D ADDR   00BBH   A      111#
AMX2CF . . . . . .  D ADDR   00BAH   A      110#
AMX2SL . . . . . .  D ADDR   00BBH   A      112#
APARITY. . . . . .  B ADDR   00D0H.0 A      429# 485
AR0. . . . . . . .  D ADDR   0000H   A      576 585
B. . . . . . . . .  D ADDR   00F0H   A      189# 453 591
BREAKED. . . . . .  B ADDR   0000H.7 R   SEG=KBDBITS   419# 435 519 523 557 559 564 566 570
BUSY . . . . . . .  B ADDR   00C0H.7 A      276#
CASE . . . . . . .  C ADDR   00BEH   R   SEG=KBDCODE   535# 542
CASES. . . . . . .  C ADDR   00D2H   R   SEG=KBDCODE   532 547#
CASE_BREAK . . . .  C ADDR   00F4H   R   SEG=KBDCODE   554 569#
CASE_CTRL. . . . .  C ADDR   00E9H   R   SEG=KBDCODE   553 562#
CASE_END . . . . .  C ADDR   00F8H   R   SEG=KBDCODE   539 561 568 571 572#
CASE_SHIFT . . . .  C ADDR   00DEH   R   SEG=KBDCODE   551 552 555#
CCF0 . . . . . . .  B ADDR   00D8H.0 A      333#
CCF1 . . . . . . .  B ADDR   00D8H.1 A      332#
CCF2 . . . . . . .  B ADDR   00D8H.2 A      331#
CCF3 . . . . . . .  B ADDR   00D8H.3 A      330#
CCF4 . . . . . . .  B ADDR   00D8H.4 A      329#
CCF5 . . . . . . .  B ADDR   00D8H.5 A      328#
CCH0CN . . . . . .  D ADDR   00A1H   A      91#
CCH0LC . . . . . .  D ADDR   00A3H   A      95#
CCH0MA . . . . . .  D ADDR   009AH   A      82#
CCH0TN . . . . . .  D ADDR   00A2H   A      93#
CF . . . . . . . .  B ADDR   00D8H.7 A      326#
A51 MACRO ASSEMBLER  KBD                                                                  11/19/2012 18:03:55 PAGE    12

CHAR_READY . . . .  B ADDR   0000H.4 R   SEG=KBDBITS   416#
CKCON. . . . . . .  D ADDR   008EH   A      62#
CLKSEL . . . . . .  D ADDR   0097H   A      76#
CLRBREAK . . . . .  C ADDR   00A6H   R   SEG=KBDCODE   519 521#
CONFIG_PAGE. . . .  N NUMB   000FH   A      369#
CONTINUE . . . . .  C ADDR   00C7H   R   SEG=KBDCODE   538 540#
COUNT. . . . . . .  D ADDR   0006H   R   SEG=KBDDATA   408# 534 536 537 543
CP0EN. . . . . . .  B ADDR   0088H.7 A      217#
CP0FIF . . . . . .  B ADDR   0088H.4 A      220#
CP0HYN0. . . . . .  B ADDR   0088H.0 A      224#
CP0HYN1. . . . . .  B ADDR   0088H.1 A      223#
CP0HYP0. . . . . .  B ADDR   0088H.2 A      222#
CP0HYP1. . . . . .  B ADDR   0088H.3 A      221#
CP0OUT . . . . . .  B ADDR   0088H.6 A      218#
CP0RIF . . . . . .  B ADDR   0088H.5 A      219#
CP1EN. . . . . . .  B ADDR   0088H.7 A      227#
CP1FIF . . . . . .  B ADDR   0088H.4 A      230#
CP1HYN0. . . . . .  B ADDR   0088H.0 A      234#
CP1HYN1. . . . . .  B ADDR   0088H.1 A      233#
CP1HYP0. . . . . .  B ADDR   0088H.2 A      232#
CP1HYP1. . . . . .  B ADDR   0088H.3 A      231#
CP1OUT . . . . . .  B ADDR   0088H.6 A      228#
CP1RIF . . . . . .  B ADDR   0088H.5 A      229#
CPARITY. . . . . .  B ADDR   0000H.1 R   SEG=KBDBITS   413# 487 495 498
CPRL2. . . . . . .  B ADDR   00C8H.0 A      297#
CPRL3. . . . . . .  B ADDR   00C8H.0 A      305#
CPRL4. . . . . . .  B ADDR   00C8H.0 A      313#
CPT0CN . . . . . .  D ADDR   0088H   A      47#
CPT0MD . . . . . .  D ADDR   0089H   A      51#
CPT0_PAGE. . . . .  N NUMB   0001H   A      372#
CPT1CN . . . . . .  D ADDR   0088H   A      48#
CPT1MD . . . . . .  D ADDR   0089H   A      52#
CPT1_PAGE. . . . .  N NUMB   0002H   A      373#
CR . . . . . . . .  B ADDR   00D8H.6 A      327#
CT2. . . . . . . .  B ADDR   00C8H.1 A      296#
CT3. . . . . . . .  B ADDR   00C8H.1 A      304#
CT4. . . . . . . .  B ADDR   00C8H.1 A      312#
CTRLED . . . . . .  B ADDR   0000H.6 R   SEG=KBDBITS   418# 434 510 563 565
CY . . . . . . . .  B ADDR   00D0H.7 A      316#
DAC0CN . . . . . .  D ADDR   00D4H   A      160#
DAC0H. . . . . . .  D ADDR   00D3H   A      158#
DAC0L. . . . . . .  D ADDR   00D2H   A      156#
DAC0_PAGE. . . . .  N NUMB   0000H   A      384#
DAC1CN . . . . . .  D ADDR   00D4H   A      161#
DAC1H. . . . . . .  D ADDR   00D3H   A      159#
DAC1L. . . . . . .  D ADDR   00D2H   A      157#
DAC1_PAGE. . . . .  N NUMB   0001H   A      385#
DONE . . . . . . .  C ADDR   0113H   R   SEG=KBDCODE   471 479 480 489 526 587#
DPH. . . . . . . .  D ADDR   0083H   A      41# 454 590
DPL. . . . . . . .  D ADDR   0082H   A      40# 455 589
EA . . . . . . . .  B ADDR   00A8H.7 A      259#
EIE1 . . . . . . .  D ADDR   00E6H   A      177#
EIE2 . . . . . . .  D ADDR   00E7H   A      178#
EIP1 . . . . . . .  D ADDR   00F6H   A      190#
EIP2 . . . . . . .  D ADDR   00F7H   A      191#
EMI0CF . . . . . .  D ADDR   00A3H   A      94#
EMI0CN . . . . . .  D ADDR   00A2H   A      92#
EMI0TC . . . . . .  D ADDR   00A1H   A      90#
EMI0_PAGE. . . . .  N NUMB   0000H   A      377#
ENSMB. . . . . . .  B ADDR   00C0H.6 A      277#
ES0. . . . . . . .  B ADDR   00A8H.4 A      261#
ET0. . . . . . . .  B ADDR   00A8H.1 A      264#
ET1. . . . . . . .  B ADDR   00A8H.3 A      262#
ET2. . . . . . . .  B ADDR   00A8H.5 A      260#
EX0. . . . . . . .  B ADDR   00A8H.0 A      265#
EX1. . . . . . . .  B ADDR   00A8H.2 A      263#
A51 MACRO ASSEMBLER  KBD                                                                  11/19/2012 18:03:55 PAGE    13

EXEN2. . . . . . .  B ADDR   00C8H.3 A      294#
EXEN3. . . . . . .  B ADDR   00C8H.3 A      302#
EXEN4. . . . . . .  B ADDR   00C8H.3 A      310#
EXF2 . . . . . . .  B ADDR   00C8H.6 A      293#
EXF3 . . . . . . .  B ADDR   00C8H.6 A      301#
EXF4 . . . . . . .  B ADDR   00C8H.6 A      309#
F0 . . . . . . . .  B ADDR   00D0H.5 A      318#
F1 . . . . . . . .  B ADDR   00D0H.1 A      322#
FLACL. . . . . . .  D ADDR   00B7H   A      105#
FLHBUSY. . . . . .  B ADDR   0088H.0 A      237#
FLSCL. . . . . . .  D ADDR   00B7H   A      106#
FLSTAT . . . . . .  D ADDR   0088H   A      46#
FRAMING. . . . . .  C ADDR   0081H   R   SEG=KBDCODE   496 500#
GOTCHAR. . . . . .  C ADDR   012AH   R   SEG=KBDCODE   605 609#
HACK . . . . . . .  C ADDR   005EH   R   SEG=KBDCODE   477 480#
HEAD . . . . . . .  D ADDR   0001H   R   SEG=KBDDATA   403# 438 577 579 581 583
IE . . . . . . . .  D ADDR   00A8H   A      100# 444
IE0. . . . . . . .  B ADDR   0088H.1 A      213#
IE1. . . . . . . .  B ADDR   0088H.3 A      211#
IP . . . . . . . .  D ADDR   00B8H   A      107# 445
IT0. . . . . . . .  B ADDR   0088H.0 A      214# 448
IT1. . . . . . . .  B ADDR   0088H.2 A      212#
KBCHAR . . . . . .  D ADDR   0005H   R   SEG=KBDDATA   407# 469 517 522 529 573 578
KBCHECK. . . . . .  C ADDR   011EH   R   SEG=KBDCODE   390 595#
KBDBITS. . . . . .  B SEG    0008H       REL=UNIT   410# 411
KBDCODE. . . . . .  C SEG    013DH       REL=UNIT   424# 425
KBDDATA. . . . . .  D SEG    0007H       REL=UNIT   400# 401
KBDIDAT. . . . . .  I SEG    0004H       REL=UNIT   396# 397
KBDQ . . . . . . .  I ADDR   0000H   R   SEG=KBDIDAT   398# 438 439 440 582 583 618 619
KBINIT . . . . . .  C ADDR   0000H   R   SEG=KBDCODE   390 427#
KBPIN. . . . . . .  B ADDR   00A0H.2 A      430# 466 473 482 491
KBPROCESS. . . . .  C ADDR   0028H   R   SEG=KBDCODE   422 451#
KEYTAB . . . . . .  C ADDR   -----       EXT   428# 509
KEYTAB2. . . . . .  C ADDR   -----       EXT   428# 511
LEGACY_PAGE. . . .  N NUMB   0000H   A      370#
LOOKUP . . . . . .  C ADDR   0087H   R   SEG=KBDCODE   504#
MAC0ACC0 . . . . .  D ADDR   0093H   A      70#
MAC0ACC1 . . . . .  D ADDR   0094H   A      71#
MAC0ACC2 . . . . .  D ADDR   0095H   A      72#
MAC0ACC3 . . . . .  D ADDR   0096H   A      74#
MAC0AH . . . . . .  D ADDR   00C2H   A      122#
MAC0AL . . . . . .  D ADDR   00C1H   A      120#
MAC0BH . . . . . .  D ADDR   0092H   A      69#
MAC0BL . . . . . .  D ADDR   0091H   A      68#
MAC0CF . . . . . .  D ADDR   00C3H   A      124#
MAC0HO . . . . . .  B ADDR   00C0H.3 A      286#
MAC0N. . . . . . .  B ADDR   00C0H.0 A      289#
MAC0OVR. . . . . .  D ADDR   0097H   A      75#
MAC0RNDH . . . . .  D ADDR   00CFH   A      152#
MAC0RNDL . . . . .  D ADDR   00CEH   A      151#
MAC0SO . . . . . .  B ADDR   00C0H.1 A      288#
MAC0STA. . . . . .  D ADDR   00C0H   A      118#
MAC0Z. . . . . . .  B ADDR   00C0H.2 A      287#
MAC0_PAGE. . . . .  N NUMB   0003H   A      388#
MAXC . . . . . . .  N NUMB   0004H   A      533# 538
MAXKEY . . . . . .  N ADDR   -----       EXT   428#
MCE1 . . . . . . .  B ADDR   0098H.5 A      251#
MINKEY . . . . . .  N ADDR   -----       EXT   428# 507
MODF . . . . . . .  B ADDR   00F8H.5 A      358#
NEXT . . . . . . .  C ADDR   0097H   R   SEG=KBDCODE   510 512#
NOBREAKC . . . . .  C ADDR   00F2H   R   SEG=KBDCODE   564 567#
NOBREAKS . . . . .  C ADDR   00E7H   R   SEG=KBDCODE   557 560#
NOWRAP . . . . . .  C ADDR   010FH   R   SEG=KBDCODE   582 584#
NSSMD0 . . . . . .  B ADDR   00F8H.2 A      361#
NSSMD1 . . . . . .  B ADDR   00F8H.3 A      360#
OSCICL . . . . . .  D ADDR   008BH   A      56#
A51 MACRO ASSEMBLER  KBD                                                                  11/19/2012 18:03:55 PAGE    14

OSCICN . . . . . .  D ADDR   008AH   A      54#
OSCXCN . . . . . .  D ADDR   008CH   A      58#
OV . . . . . . . .  B ADDR   00D0H.2 A      321#
P. . . . . . . . .  B ADDR   00D0H.0 A      323#
P0 . . . . . . . .  D ADDR   0080H   A      38#
P0MDOUT. . . . . .  D ADDR   00A4H   A      96#
P1 . . . . . . . .  D ADDR   0090H   A      66#
P1MDIN . . . . . .  D ADDR   00ADH   A      102#
P1MDOUT. . . . . .  D ADDR   00A5H   A      97#
P2 . . . . . . . .  D ADDR   00A0H   A      89# 430
P2MDOUT. . . . . .  D ADDR   00A6H   A      98#
P3 . . . . . . . .  D ADDR   00B0H   A      103#
P3MDOUT. . . . . .  D ADDR   00A7H   A      99#
P4 . . . . . . . .  D ADDR   00C8H   A      132#
P4MDOUT. . . . . .  D ADDR   009CH   A      84#
P5 . . . . . . . .  D ADDR   00D8H   A      162#
P5MDOUT. . . . . .  D ADDR   009DH   A      85#
P6 . . . . . . . .  D ADDR   00E8H   A      181#
P6MDOUT. . . . . .  D ADDR   009EH   A      87#
P7 . . . . . . . .  D ADDR   00F8H   A      192#
P7MDOUT. . . . . .  D ADDR   009FH   A      88#
PARITY . . . . . .  B ADDR   0000H.0 R   SEG=KBDBITS   412# 483 494 497
PCA0CN . . . . . .  D ADDR   00D8H   A      163#
PCA0CPH0 . . . . .  D ADDR   00FCH   A      197#
PCA0CPH1 . . . . .  D ADDR   00FEH   A      199#
PCA0CPH2 . . . . .  D ADDR   00EAH   A      183#
PCA0CPH3 . . . . .  D ADDR   00ECH   A      185#
PCA0CPH4 . . . . .  D ADDR   00EEH   A      187#
PCA0CPH5 . . . . .  D ADDR   00E2H   A      174#
PCA0CPL0 . . . . .  D ADDR   00FBH   A      196#
PCA0CPL1 . . . . .  D ADDR   00FDH   A      198#
PCA0CPL2 . . . . .  D ADDR   00E9H   A      182#
PCA0CPL3 . . . . .  D ADDR   00EBH   A      184#
PCA0CPL4 . . . . .  D ADDR   00EDH   A      186#
PCA0CPL5 . . . . .  D ADDR   00E1H   A      173#
PCA0CPM0 . . . . .  D ADDR   00DAH   A      165#
PCA0CPM1 . . . . .  D ADDR   00DBH   A      166#
PCA0CPM2 . . . . .  D ADDR   00DCH   A      167#
PCA0CPM3 . . . . .  D ADDR   00DDH   A      168#
PCA0CPM4 . . . . .  D ADDR   00DEH   A      169#
PCA0CPM5 . . . . .  D ADDR   00DFH   A      170#
PCA0H. . . . . . .  D ADDR   00FAH   A      195#
PCA0L. . . . . . .  D ADDR   00F9H   A      194#
PCA0MD . . . . . .  D ADDR   00D9H   A      164#
PCA0_PAGE. . . . .  N NUMB   0000H   A      386#
PCON . . . . . . .  D ADDR   0087H   A      45#
PLL0CN . . . . . .  D ADDR   0089H   A      53#
PLL0DIV. . . . . .  D ADDR   008DH   A      61#
PLL0FLT. . . . . .  D ADDR   008FH   A      65#
PLL0MUL. . . . . .  D ADDR   008EH   A      63#
PLL0_PAGE. . . . .  N NUMB   000FH   A      387#
PS . . . . . . . .  B ADDR   00B8H.4 A      269#
PSBANK . . . . . .  D ADDR   00B1H   A      104#
PSCTL. . . . . . .  D ADDR   008FH   A      64#
PSW. . . . . . . .  D ADDR   00D0H   A      154# 429 456 588
PT0. . . . . . . .  B ADDR   00B8H.1 A      272#
PT1. . . . . . . .  B ADDR   00B8H.3 A      270#
PT2. . . . . . . .  B ADDR   00B8H.5 A      268#
PX0. . . . . . . .  B ADDR   00B8H.0 A      273#
PX1. . . . . . . .  B ADDR   00B8H.2 A      271#
QUEUELEN . . . . .  N NUMB   0004H   A      394# 398 437 582 605 618
QUEUESIZE. . . . .  D ADDR   0000H   R   SEG=KBDDATA   402# 437 580 604 614
RB80 . . . . . . .  B ADDR   0098H.2 A      245#
RB81 . . . . . . .  B ADDR   0098H.2 A      254#
RCAP2H . . . . . .  D ADDR   00CBH   A      142#
RCAP2L . . . . . .  D ADDR   00CAH   A      139#
A51 MACRO ASSEMBLER  KBD                                                                  11/19/2012 18:03:55 PAGE    15

RCAP3H . . . . . .  D ADDR   00CBH   A      143#
RCAP3L . . . . . .  D ADDR   00CAH   A      140#
RCAP4H . . . . . .  D ADDR   00CBH   A      144#
RCAP4L . . . . . .  D ADDR   00CAH   A      141#
REF0CN . . . . . .  D ADDR   00D1H   A      155#
REN0 . . . . . . .  B ADDR   0098H.4 A      243#
REN1 . . . . . . .  B ADDR   0098H.4 A      252#
RESET_STATE. . . .  C ADDR   00ABH   R   SEG=KBDCODE   524# 530 574 586
RI0. . . . . . . .  B ADDR   0098H.0 A      247#
RI1. . . . . . . .  B ADDR   0098H.0 A      256#
RS0. . . . . . . .  B ADDR   00D0H.3 A      320#
RS1. . . . . . . .  B ADDR   00D0H.4 A      319#
RSTSRC . . . . . .  D ADDR   00EFH   A      188#
RXOVRN . . . . . .  B ADDR   00F8H.4 A      359#
RX_DATA. . . . . .  C ADDR   0050H   R   SEG=KBDCODE   462 472#
RX_ERROR . . . . .  C ADDR   00B0H   R   SEG=KBDCODE   499 503 508 527#
RX_PARITY. . . . .  C ADDR   0061H   R   SEG=KBDCODE   463 481#
RX_START_BIT . . .  C ADDR   0041H   R   SEG=KBDCODE   461 465#
RX_STOP_BIT. . . .  C ADDR   0071H   R   SEG=KBDCODE   464 490#
S1MODE . . . . . .  B ADDR   0098H.7 A      250#
SADDR0 . . . . . .  D ADDR   00A9H   A      101#
SADEN0 . . . . . .  D ADDR   00B9H   A      108#
SBUF0. . . . . . .  D ADDR   0099H   A      79#
SBUF1. . . . . . .  D ADDR   0099H   A      80#
SCAN_CODE. . . . .  D ADDR   0004H   R   SEG=KBDDATA   406# 468 474 476 484 505 528 542
SCON0. . . . . . .  D ADDR   0098H   A      77#
SCON1. . . . . . .  D ADDR   0098H   A      78#
SC_ERROR . . . . .  N NUMB   0000H   A      431# 469 522 528 529 573
SFRLAST. . . . . .  D ADDR   0086H   A      44#
SFRNEXT. . . . . .  D ADDR   0085H   A      43#
SFRPAGE. . . . . .  D ADDR   0084H   A      42# 443 447
SFRPGCN. . . . . .  D ADDR   0096H   A      73#
SHIFTED. . . . . .  B ADDR   0000H.5 R   SEG=KBDBITS   417# 433 513 556 558
SI . . . . . . . .  B ADDR   00C0H.3 A      280#
SM00 . . . . . . .  B ADDR   0098H.7 A      240#
SM10 . . . . . . .  B ADDR   0098H.6 A      241#
SM20 . . . . . . .  B ADDR   0098H.5 A      242#
SMB0ADR. . . . . .  D ADDR   00C3H   A      125#
SMB0CN . . . . . .  D ADDR   00C0H   A      119#
SMB0CR . . . . . .  D ADDR   00CFH   A      153#
SMB0DAT. . . . . .  D ADDR   00C2H   A      123#
SMB0STA. . . . . .  D ADDR   00C1H   A      121#
SMB0_PAGE. . . . .  N NUMB   0000H   A      380#
SMBFTE . . . . . .  B ADDR   00C0H.1 A      282#
SMBTOE . . . . . .  B ADDR   00C0H.0 A      283#
SP . . . . . . . .  D ADDR   0081H   A      39#
SPECIAL_KEY. . . .  C ADDR   00B8H   R   SEG=KBDCODE   518 531#
SPI0CFG. . . . . .  D ADDR   009AH   A      81#
SPI0CKR. . . . . .  D ADDR   009DH   A      86#
SPI0CN . . . . . .  D ADDR   00F8H   A      193#
SPI0DAT. . . . . .  D ADDR   009BH   A      83#
SPI0_PAGE. . . . .  N NUMB   0000H   A      376#
SPIEN. . . . . . .  B ADDR   00F8H.0 A      363#
SPIF . . . . . . .  B ADDR   00F8H.7 A      356#
SSTA0. . . . . . .  D ADDR   0091H   A      67#
STA. . . . . . . .  B ADDR   00C0H.5 A      278#
START_BIT. . . . .  B ADDR   0000H.2 R   SEG=KBDBITS   414# 467 502
STATE. . . . . . .  D ADDR   0003H   R   SEG=KBDDATA   405# 432 457 470 478 488 525
STO. . . . . . . .  B ADDR   00C0H.4 A      279#
STOP_BIT . . . . .  B ADDR   0000H.3 R   SEG=KBDBITS   415# 492 501
SWITCH . . . . . .  C ADDR   00D6H   R   SEG=KBDCODE   545 551#
TABLE. . . . . . .  C ADDR   0039H   R   SEG=KBDCODE   459 461#
TAIL . . . . . . .  D ADDR   0002H   R   SEG=KBDDATA   404# 439 611 616 617 619
TB80 . . . . . . .  B ADDR   0098H.3 A      244#
TB81 . . . . . . .  B ADDR   0098H.3 A      253#
TCON . . . . . . .  D ADDR   0088H   A      49#
A51 MACRO ASSEMBLER  KBD                                                                  11/19/2012 18:03:55 PAGE    16

TF0. . . . . . . .  B ADDR   0088H.5 A      209#
TF1. . . . . . . .  B ADDR   0088H.7 A      207#
TF2. . . . . . . .  B ADDR   00C8H.7 A      292#
TF3. . . . . . . .  B ADDR   00C8H.7 A      300#
TF4. . . . . . . .  B ADDR   00C8H.7 A      308#
TH0. . . . . . . .  D ADDR   008CH   A      59#
TH1. . . . . . . .  D ADDR   008DH   A      60#
TI0. . . . . . . .  B ADDR   0098H.1 A      246#
TI1. . . . . . . .  B ADDR   0098H.1 A      255#
TIMER01_PAGE . . .  N NUMB   0000H   A      371#
TL0. . . . . . . .  D ADDR   008AH   A      55#
TL1. . . . . . . .  D ADDR   008BH   A      57#
TMOD . . . . . . .  D ADDR   0089H   A      50#
TMR2CF . . . . . .  D ADDR   00C9H   A      136#
TMR2CN . . . . . .  D ADDR   00C8H   A      133#
TMR2H. . . . . . .  D ADDR   00CDH   A      148#
TMR2L. . . . . . .  D ADDR   00CCH   A      145#
TMR2_PAGE. . . . .  N NUMB   0000H   A      381#
TMR3CF . . . . . .  D ADDR   00C9H   A      137#
TMR3CN . . . . . .  D ADDR   00C8H   A      134#
TMR3H. . . . . . .  D ADDR   00CDH   A      149#
TMR3L. . . . . . .  D ADDR   00CCH   A      146#
TMR3_PAGE. . . . .  N NUMB   0001H   A      382#
TMR4CF . . . . . .  D ADDR   00C9H   A      138#
TMR4CN . . . . . .  D ADDR   00C8H   A      135#
TMR4H. . . . . . .  D ADDR   00CDH   A      150#
TMR4L. . . . . . .  D ADDR   00CCH   A      147#
TMR4_PAGE. . . . .  N NUMB   0002H   A      383#
TR0. . . . . . . .  B ADDR   0088H.4 A      210#
TR1. . . . . . . .  B ADDR   0088H.6 A      208#
TR2. . . . . . . .  B ADDR   00C8H.2 A      295#
TR3. . . . . . . .  B ADDR   00C8H.2 A      303#
TR4. . . . . . . .  B ADDR   00C8H.2 A      311#
TXBMT. . . . . . .  B ADDR   00F8H.1 A      362#
UART0_PAGE . . . .  N NUMB   0000H   A      374#
UART1_PAGE . . . .  N NUMB   0001H   A      375#
VALID_CHAR . . . .  C ADDR   00FDH   R   SEG=KBDCODE   520 575#
VALID_CHK. . . . .  C ADDR   0075H   R   SEG=KBDCODE   493#
WCOL . . . . . . .  B ADDR   00F8H.6 A      357#
WDTCN. . . . . . .  D ADDR   00FFH   A      200#
WRAPTAIL . . . . .  C ADDR   013AH   R   SEG=KBDCODE   618 620#
XBR0 . . . . . . .  D ADDR   00E1H   A      172#
XBR1 . . . . . . .  D ADDR   00E2H   A      175# 446
XBR2 . . . . . . .  D ADDR   00E3H   A      176#


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)

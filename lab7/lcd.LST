C51 COMPILER V9.50a   LCD                                                                  11/12/2012 12:11:00 PAGE 1   


C51 COMPILER V9.50a, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN lcd.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\c51.exe lcd.c DB OE BR INCDIR(C:\SiLabs\MCU\Inc)

line level    source

   1          #include "lcd.h"
   2          #include "delay.h"
   3          #include <c8051f120.h>          // get SFR declarations
   4          
   5          // hackros
   6          #define lcdwstr()    while (*str) {_lcddata(*str); str++;}
   7          
   8          // timings in us
   9          #define T_AS        0.06
  10          #define PW_EH       0.5
  11          #define T_DSW       0.2
  12          #define T_AH        0.02
  13          #define T_DDR       0.4
  14          
  15          // utility functions
  16          void _mpuwdata(uint8_t d);          // write data to MPU
  17          void _mpuwcmd(uint8_t cmd);
  18          uint8_t _mpurdata();                // read data from MPU
  19          uint8_t _mpurcmd();
  20          void _lcddata(uint8_t d);           // write data to MPU, wait for busy state to complete
  21          void _lcdcmd(uint8_t d);
  22          void _busy();                       // wait on busy flag
  23          
  24          // global vars
  25          const uint8_t lcdrs = 0x02;
  26          const uint8_t lcdrw = 0x01;
  27          uint8_t xdata *lcdbase;
  28          uint8_t xdata *lcdwdata;
  29          uint8_t xdata *lcdwcmd;
  30          uint8_t xdata *lcdrdata;
  31          uint8_t xdata *lcdrcmd;
  32          
  33          // public functions
  34          void lcdinit() {
  35   1          const uint8_t setup_flags = 0x38; // function set: 8-bit mode, 2 lines, 5x8 font
  36   1      
  37   1          // external memory config
  38   1          SFRPAGE = 0;
  39   1          EMI0CF |= 0x34;                   //external interface on pins P7-P4
  40   1          EMI0CN = 0xFF;                    //8-bit address reference off-chip memory
  41   1          SFRPAGE = 0x0F;
  42   1          P4MDOUT = 0xC0;                   //read and write control
  43   1          P6MDOUT = 0xFF;                   //address lines
  44   1          P7MDOUT = 0xFF;                   //data lines
  45   1      
  46   1          // external pointer config
  47   1          lcdbase  = 0x00;
  48   1          lcdwdata = lcdbase;
  49   1          lcdwcmd  = lcdbase + lcdrs;
  50   1          lcdrdata = lcdbase + lcdrw;
  51   1          lcdrcmd  = lcdbase + lcdrs + lcdrw;
  52   1      
  53   1          // huh?
  54   1          _mpuwcmd(setup_flags);
  55   1          delay_us(37);
C51 COMPILER V9.50a   LCD                                                                  11/12/2012 12:11:00 PAGE 2   

  56   1      
  57   1          // set display on/off, cursor, and blinking.
  58   1          _lcdcmd(0x0F);
  59   1          lcdclear();
  60   1      
  61   1          _busy();
  62   1          // and 0-60 in about 37 us
  63   1      }
  64          
  65          void lcdwrite(uint8_t *str) {
  66   1          lcdwstr();
  67   1      }
  68          
  69          void lcdwritec(uint8_t code *str) {
  70   1          lcdwstr();
  71   1      }
  72          
  73          void lcdwritex(uint8_t xdata *str) {
  74   1          lcdwstr();
  75   1      }
  76          
  77          void lcdpos(uint8_t row, uint8_t col) {
  78   1          _lcdcmd((0x80 | ((row & 0x01) * 0x40) | (col & 0x0F))); //lulz
  79   1      }
  80          
  81          void lcdcursor(uint8_t mode) {
  82   1          _lcdcmd((0x0C | (mode & 0x0F))); //trololol
  83   1      }
  84          
  85          void lcdclear() {
  86   1          _lcdcmd(0x01);
  87   1      }
  88          
  89          // utility function definitions
  90          void _mpuwdata(uint8_t d) {
  91   1          *lcdwdata = d;
  92   1      }
  93          
  94          void _mpuwcmd(uint8_t cmd) {
  95   1          *lcdwcmd = cmd;
  96   1      }
  97          
  98          uint8_t _mpurdata() {
  99   1          return *lcdrdata;
 100   1      }
 101          
 102          uint8_t _mpurcmd() {
 103   1          return *lcdrcmd;
 104   1      }
 105          
 106          void _lcddata(uint8_t d) {
 107   1          _busy();
 108   1          _mpuwdata(d);
 109   1      }
 110          
 111          void _lcdcmd(uint8_t d) {
 112   1          _busy();
 113   1          _mpuwcmd(d);
 114   1      }
 115          
 116          void _busy() {
 117   1          while (_mpurcmd() & 0x80) {} //win
C51 COMPILER V9.50a   LCD                                                                  11/12/2012 12:11:00 PAGE 3   

 118   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    288    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

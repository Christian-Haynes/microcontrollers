loop0:	mov R7, #04H
loop1:	mov R6, #0BEH
loop2:	mov R5, #0
		djnz R5, $
		djnz R6, loop2
		djnz R7, loop1
		cpl LED
		jmp loop0


The mov instructions each take 2 cycles.
The djnz takes 2 cycles if after the decrement, the compared values are 0.
Otherwise, it will take 3 cycles.
The cpl instruction takes 2 cycles.
The jmp as shown in the dissasembly is a short jump. Therefore, it will take
3 cycles.

So, the djnz R5, $ will continue to decrement until it is 0. 
The inner loop consists of:
	
		mov R5, #0h
		djnz R5, $

2 + 3 : R5=0xFF = 255
3 : ... 254 times ... : 254*3 = 762

At this point, R5 would have 0x01.

2: djnz R5, $

TOTAL FOR INNERMOST LOOP(loop2):
2+3+(3*254)+2 = 769 CYCLES.
-------------------------------------------------------------------------------
loop1:

		mov R6, #0BEh
		"loop 2"
		djnz R6, loop2

2 : R6 = 0xBE = 190
769 + 3 : ... 189 times ... : 772 * 189 = 14 836
2 : for last step

TOTAL FOR LOOP1:
2 + (772*189) + 2 = 14 840 CYCLES.
-------------------------------------------------------------------------------
loop0:
		mov R7, #04H
		"loop1"
		djnz R7, loop1
		cpl LED
		sjmp loop0

2 : R7 = 0x04 = 4
14 8440 * 3 = 445320 : loop1
2 : djnz because R7 is zero now
2 : cpl
3 : sjmp

Total of 445,329 cycles